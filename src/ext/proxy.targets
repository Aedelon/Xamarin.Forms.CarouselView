<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
  
    Proxy
      A target that runs before the following "well known" targets:
      
        Build
        Clean
        Install
        NugetRestore
        DryRun
        Compile
        Package
        Sign
        GetTargetPath
      
      see also: https://github.com/Microsoft/msbuild/issues/851
  -->

  <!--capture target name-->
  <Target Name="_SetProxyTargetBuild">
    <PropertyGroup>
      <ProxyTarget>Build</ProxyTarget>
    </PropertyGroup>
  </Target>
  <Target Name="_SetProxyTargetClean">
    <PropertyGroup>
      <ProxyTarget>Clean</ProxyTarget>
    </PropertyGroup>
  </Target>
  <Target Name="_SetProxyTargetInstall">
    <PropertyGroup>
      <ProxyTarget>Install</ProxyTarget>
    </PropertyGroup>
  </Target>
  <Target Name="_SetProxyTargetNugetRestore">
    <PropertyGroup>
      <ProxyTarget>NugetRestore</ProxyTarget>
    </PropertyGroup>
  </Target>
  <Target Name="_SetProxyTargetDryRun">
    <PropertyGroup>
      <ProxyTarget>DryRun</ProxyTarget>
    </PropertyGroup>
  </Target>
  <Target Name="_SetProxyTargetCompile">
    <PropertyGroup>
      <ProxyTarget>Compile</ProxyTarget>
    </PropertyGroup>
  </Target>
  <Target Name="_SetProxyTargetPackage">
    <PropertyGroup>
      <ProxyTarget>Package</ProxyTarget>
    </PropertyGroup>
  </Target>
  <Target Name="_SetProxyTargetSign">
    <PropertyGroup>
      <ProxyTarget>Sign</ProxyTarget>
    </PropertyGroup>
  </Target>
  <Target Name="_SetProxyTargetGetTargetPath">
    <PropertyGroup>
      <ProxyTarget>GetTargetPath</ProxyTarget>
    </PropertyGroup>
  </Target>

  <!--Proxy-->
  <PropertyGroup>
    <ProxyDependsOn>CoreProxy</ProxyDependsOn>
  </PropertyGroup>
  <Target Name="Proxy" DependsOnTargets="$(ProxyDependsOn)" />
  <Target Name="CoreProxy" />

  <!--inject Proxy before well known targets but after capturing target name-->
  <PropertyGroup>
    <BuildDependsOn>_SetProxyTargetBuild;Proxy;$(BuildDependsOn)</BuildDependsOn>
    <CleanDependsOn>_SetProxyTargetClean;Proxy;$(CleanDependsOn)</CleanDependsOn>
    <InstallDependsOn>_SetProxyTargetInstall;Proxy;$(InstallDependsOn)</InstallDependsOn>
    <NugetRestoreDependsOn>_SetProxyTargetNugetRestore;Proxy;$(NugetRestoreDependsOn)</NugetRestoreDependsOn>
    <DryRunDependsOn>_SetProxyTargetDryRun;Proxy;$(DryRunDependsOn)</DryRunDependsOn>
    <CompileDependsOn>_SetProxyTargetCompile;Proxy;$(CompileDependsOn)</CompileDependsOn>
    <GetTargetPathDependsOn>_SetProxyTargetGetTargetPath;Proxy;$(GetTargetPathDependsOn)</GetTargetPathDependsOn>
    <PackageDependsOn>_SetProxyTargetPackage;Proxy;$(PackageDependsOn)</PackageDependsOn>
    <SignDependsOn>_SetProxyTargetSign;Proxy;$(SignDependsOn)</SignDependsOn>
  </PropertyGroup>
</Project>