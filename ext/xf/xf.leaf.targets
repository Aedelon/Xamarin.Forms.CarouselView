<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(ExtDir)nuget\.targets" />

  <!--
    
    _GitClean
      quitely force removal of only ignored files including directories
  -->
  <Target 
    Name="_GitClean"
    AfterTargets="Clean"
    Condition="'$(IsLeafPlatform)'=='true'"
  >
    <PropertyGroup>
      <CleanCommand>git clean -fdXq</CleanCommand>
      <CleanMessage>$(MSBuildProjectName) x-> </CleanMessage>
    </PropertyGroup>

    <Message Importance="high" Text="$(CleanMessage)$(OutDirAbsolute)"/>
    <Exec Command="$(CleanCommand) $(OutDirAbsolute)"/>

    <Message Importance="high" Text="$(CleanMessage)$(IntermediateOutputPathAbsolute)"/>
    <Exec Command="$(CleanCommand) $(IntermediateOutputPathAbsolute)"/>
  </Target>

  <!--
  
    NugetRestore
      NugetRestore -> _DownloadNugetExe -> _BuildTaskProject
  -->

  <!--download nuget.exe-->
  <Target
    Name="_DownloadNugetExe"
    DependsOnTargets="_BuildTaskProject"
    Condition="!Exists($(NugetExe))"
  >
    <Message Importance="high" Text="Download nuget.exe -> $(ToolsDir)" />
    <WebCopy SourceUrls="$(NugetExeUrl)" DestinationFolder="$(ToolsDir)"/>
  </Target>

  <!--nuget restore-->
  <PropertyGroup>
    <NugetRestoreDependsOn >_DownloadNugetExe;CoreNugetRestore</NugetRestoreDependsOn>
  </PropertyGroup>
  <Target Name="NugetRestore" DependsOnTargets="$(NugetRestoreDependsOn)" />
  <Target
    Name="CoreNugetRestore"
    Inputs="@(NugetPackage->'$(NugetPackagesDir).config\%(Identity)\packages.config')"
    Outputs="$(NugetPackagesDir).config\%(Identity)\packages.config"
    Condition="'@(NugetPackage)'!=''">

    <!--ensure directory for packages.config exists-->
    <ItemGroup>
      <NugetTempConfigFile Include="$(BuildTempConfigDir).config\%(NugetPackage.Identity)\packages.config" />
    </ItemGroup>
    <MakeDir Directories="@(NugetTempConfigFile->'%(RootDir)%(Directory)')" />

    <!--emit packages.config file-->
    <PropertyGroup>
      <NugetPackageAttributes>id='%(NugetPackage.Identity)' version='%(Version)'</NugetPackageAttributes>
      <NugetPackageAttributes Condition="'%(NugetPackage.TargetFramework)'!=''"
        >$(NugetPackageAttributes) targetFramework='%(TargetFramework)'</NugetPackageAttributes>
      <NugetPackageElement>&lt;package $(NugetPackageAttributes)/&gt;</NugetPackageElement>
      <NugetPackageXml>&lt;packages&gt;$(NugetPackageElement)&lt;/packages&gt;</NugetPackageXml>
    </PropertyGroup>
    <WriteLinesToFile
      File="@(NugetTempConfigFile)"
      Lines="$(NugetPackageXml)"
      Overwrite="true"
      Encoding="Unicode"
    />

    <!--execute nuget restore command-->
    <PropertyGroup>
      <NugetRestoreExecVerbosity>quiet</NugetRestoreExecVerbosity>
      <NugetRestoreExecVerbosity Condition="'$(NugetRestoreVerbosity)'=='high'" >normal</NugetRestoreExecVerbosity>

      <NugetRestoreExec>$(NugetExe) restore</NugetRestoreExec>
      <NugetRestoreExec>$(NugetRestoreExec) -OutputDirectory $(NugetPackagesDirAbsolute)</NugetRestoreExec>
      <NugetRestoreExec>$(NugetRestoreExec) -Source $(NugetFeed)</NugetRestoreExec>
      <NugetRestoreExec>$(NugetRestoreExec) -Verbosity $(NugetRestoreExecVerbosity)</NugetRestoreExec>
    </PropertyGroup>
    <Exec Command="$(NugetRestoreExec) @(NugetTempConfigFile)" />

    <!--config file doubles as task input/output-->
    <PropertyGroup>
      <NugetConfigFile>$([System.IO.Path]::GetFullPath('$(ProjDir)$(NugetPackagesDir).config\%(NugetPackage.Identity)\packages.config'))</NugetConfigFile>
    </PropertyGroup>
    <Message Importance="high" Text="Download %(NugetPackage.Identity) -> $(NugetConfigFile)" />
    <Copy
      SourceFiles="@(NugetTempConfigFile)"
      DestinationFiles="$(NugetPackagesDirAbsolute).config\%(NugetPackage.Identity)\packages.config"
    />
  </Target>
  
</Project>