<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="pack.props" />
  <Import Project="$(ExtDir)empty.targets" />

  <PropertyGroup>
    <BuildDependsOn>
      _UnpackTest;
      $(BuildDependsOn)
    </BuildDependsOn>
  </PropertyGroup>

  <!--test-->
  <Target
    Name="_UnpackTest"
    DependsOnTargets="_UnpackBuild">

    <Message Importance="high" Text="TODO: Run tests after nuget upgrade"/>
  </Target>

  <!--build-->
  <Target
    Name="_UnpackBuild"
    DependsOnTargets="_UnpackUpdate" >

    <MSBuild 
      Projects="$(ProjFile)"
      Targets="GetLogArguments"
      Properties="BuildProcessName=Unpack;BuildName=Build.$(Configuration)"
    >
      <Output ItemName="UnpackBuildLogs" TaskParameter="TargetOutputs" />
    </MSBuild>

    <PropertyGroup>
      <_LogFileType>build.unpack</_LogFileType>

      <_CommandLine>$(MSBuildExe) $(UnpackAfterDir)NugetUpdate.sln</_CommandLine>
      <_CommandLine>$(_CommandLine) /t:Build</_CommandLine>
      <_CommandLine>$(_CommandLine) /p:Platform=AnyCPU</_CommandLine>
      <_CommandLine>$(_CommandLine) /p:Configuration=$(Configuration)</_CommandLine>
      <_CommandLine>$(_CommandLine) /m</_CommandLine>
      <_CommandLine>$(_CommandLine) $(Properties)</_CommandLine>
      <_CommandLine>$(_CommandLine) @(UnpackBuildLogs, ' ')</_CommandLine>
    </PropertyGroup>

    <Exec Command="$(_CommandLine)" WorkingDirectory="$(UnpackAfterDir)" />
  </Target>

  <!--update-->
  <Target
    Name="_UnpackUpdate"
    DependsOnTargets="_UnpackRestore" >

    <PropertyGroup>
      <_Command>$(NugetExe) update NugetUpdate.sln</_Command>
      <_Command>$(_Command) -id Xamarin.Forms.CarouselView</_Command>
      <_Command>$(_Command) -RepositoryPath packages</_Command>
      <_Command>$(_Command) -Source $(UnpackSourceDir)</_Command>
      <_Command>$(_Command) -Source $(NugetFeed)</_Command>
      <_Command>$(_Command) -Verbosity $(UnpackExecVerbosity)</_Command>
      <_Command>$(_Command) -Prerelease</_Command>

      <_Log>$(UnpackAfterLogDir)update.log</_Log>
    </PropertyGroup>

    <Exec
      Command="$(_Command) &gt; $(_Log)"
      WorkingDirectory="$(UnpackAfterDir) "
    />
    <Message Importance="$(UnpackVerbosity)" Text="Update -&gt; $(_Log)" />
  </Target>

  <!--restore-->
  <Target 
    Name="_UnpackRestore" 
    DependsOnTargets="_UnpackCopy" >
    
    <PropertyGroup>
      <_Command>$(NugetExe) restore NugetUpdate.sln</_Command>
      <_Command>$(_Command) -Source $(UnpackSourceDir)</_Command>
      <_Command>$(_Command) -Source $(NugetFeed)</_Command>
      <_Command>$(_Command) -Verbosity $(UnpackExecVerbosity)</_Command>
      <_Command>$(_Command) -NoCache</_Command>

      <_Log>$(UnpackAfterLogDir)restore.log</_Log>
    </PropertyGroup>

    <Exec 
      Command="$(_Command) &gt; $(_Log)" 
      WorkingDirectory="$(UnpackAfterDir)" 
    />
    <Message Importance="$(UnpackVerbosity)" Text="NugetRestore -&gt; $(_Log)" />
  </Target>

  <!--copy-->
  <Target
    Name="_UnpackCopy" 
    DependsOnTargets="_UnpackResolve"
  >
    <ItemGroup>
      <UnpackSolutionFiles Include="$(ProjDir)Unpack\**\*" />
    </ItemGroup>

    <!--before-->
    <MakeDir Directories="$(UnpackBeforeDir)" />
    <Copy 
      SourceFiles="@(UnpackSolutionFiles)" 
      DestinationFolder="$(UnpackBeforeDir)\%(RecursiveDir)" 
      SkipUnchangedFiles="true" 
    />

    <!--after-->
    <MakeDir Directories="$(UnpackAfterDir)" />
    <MakeDir Directories="$(UnpackAfterLogDir)" />
    <Copy SourceFiles="@(UnpackSolutionFiles)" DestinationFolder="$(UnpackAfterDir)\%(RecursiveDir)" SkipUnchangedFiles="true" />

    <Message Importance="high" Text="$(MSBuildProjectName) -> $(UnpackBeforeDir) => $(UnpackAfterDir)" />
  </Target>

  <!--resolve-->
  <Target 
    Name="_UnpackResolve" 
  >
    <PropertyGroup>
      <UnpackSourceDir>@(TargetResult->DirectoryName())\</UnpackSourceDir>
    </PropertyGroup>
  </Target>

</Project>