<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
  
    ResolveMetaProjectReferences
      Invokes msbuild on all types of project references before the well known target
  -->
  <ItemDefinitionGroup>
    <_ChildProjectReference>
      <ReferenceSource/>
      <AdditionalProperties/>
      <IncludeInResult/>
      <TargetFramework/>
      <IsPartPlatform/>
    </_ChildProjectReference>
  </ItemDefinitionGroup>
  <Target 
    Name="ResolveMetaProjectReferences"
    BeforeTargets="Proxy"
  >
    <Error
      Condition="'$(IsLeafPlatform)'!='true' AND '@(ChildPlatforms)|$(LeafPlatform)'==''"
      Text="Platform '$(Plat)' is not recognized."
    />
    <Error
      Condition="'$(IsAppPlatform)'=='true' AND '$(IsAppProject)'!='true'"
      Text="Platform '$(Plat)' is an application platform and can only be used to build an application."
    />
    <Error
      Condition="'$(IsLibraryPlatform)'=='true' AND '$(IsLibraryProject)'!='true'"
      Text="Platform '$(Plat)' is a library platform and can only be used to build a library."
    />
    <Error
      Condition="'$(IsUiTestPlatform)'=='true' AND '$(IsUiTestProject)'!='true'"
      Text="Platform '$(Plat)' is a library platform and can only be used to build a library."
    />
    <Error
      Condition="'$(BuildTarget)'=='Compile' AND '$(IsInVS)'!='true'"
      Text="Platform 'Compile' is only supported when building in VS during intellisesne loading."
    />
    
    <!--_ChildProjectReference-->
    <ItemGroup>
      <!--if (ChildPlatforms has value) then Platform-->
      <_ChildProjectReference 
        Condition="'@(ChildPlatforms)'!=''" 
        Include="$(ProjFile)"
      >
        <ReferenceSource>ChildPlatform</ReferenceSource>
        <AdditionalProperties>Platform=%(ChildPlatforms.Identity)</AdditionalProperties>
      </_ChildProjectReference>
      
      <!--if (LeafPlatform has value) then Platform + MetaPlatform-->
      <_ChildProjectReference 
        Condition="'$(LeafPlatform)'!=''" 
        Include="$(ProjFile)"
      >
        <ReferenceSource>LeafPlatform</ReferenceSource>
        <AdditionalProperties>Platform=$(LeafPlatform);MetaPlatform=$(MetaPlatform)</AdditionalProperties>
        <TargetFramework Condition="'$(IsLibraryPlatform)'=='true'">$(TargetFramework)</TargetFramework>
      </_ChildProjectReference>
    </ItemGroup>

    <!--MS.Common.targets logic: if "compile" leaf in VS then assume reference already compiled by VS intellisesne engine.
        Incidentally, this is also why there is no intellisense for unloaded projects.
    -->
    <PropertyGroup>
      <_Targets>$(BuildTarget)</_Targets>
      <_Targets 
        Condition="
          '$(IsLeafPlatform)'=='true' AND 
          '$(BuildTarget)'=='Compile' AND
          '$(IsInVs)' == 'true'
        "
      >GetTargetPath</_Targets>
    </PropertyGroup>

    <!--pre log-->
    <Message
      Text="MetaProjectReferences: @(_ChildProjectReference->Count())"
      Importance="$(ProjVerbosity)" 
    />
    <Message
      Text="  %(_ChildProjectReference.ReferenceSource): %(Identity) /t:$(BuildTarget) /+p:%(AdditionalProperties)"
      Condition="'@(_ChildProjectReference)'!=''"
      Importance="$(ProjVerbosity)"
    />
    <!--<WriteLineToFile
      File="f:\vs.log"
      Line="MetaProjectReferences: @(_ChildProjectReference->Count())"
      Condition="'@(_ChildProjectReference)'!=''"
    />
    <WriteLineToFile
      File="f:\vs.log"
      Line="  %(_ChildProjectReference.ReferenceSource): %(Identity) /t:$(BuildTarget) /+p:%(AdditionalProperties)"
      Condition="'@(_ChildProjectReference)'!=''"
    />-->

    <!--batch configurations-->
    <ItemGroup>
      <_Configurations Include="$(Configuration)" />
    </ItemGroup>

    <!--build-->
    <MSBuild
      Projects="@(_ChildProjectReference)"
      Properties="Configuration=%(_Configurations.Identity)"
      Targets="$(_Targets)"
      ContinueOnError="true"
      BuildInParallel="true"
      RemoveProperties=""
    >
      <Output ItemName="EveryResult" TaskParameter="TargetOutputs" />
    </MSBuild>

    <!--tag results-->
    <ItemGroup>
      <EveryResult Condition="true">
        <IsPartPlatform Condition="'$(IsPartPlatform)'=='true'">true</IsPartPlatform>
      </EveryResult>
    </ItemGroup>

    <!--select results-->
    <ItemGroup>
      <TargetResult Include="@(EveryResult)"/>
      <TargetResult 
        Condition="'$(IsPartPlatform)'=='' AND '%(TargetResult.IsPartPlatform)'=='true'" 
        Remove="%(Identity)"
      />
    </ItemGroup>
    <Message
      Text="%(ReferenceSource): $(ProjName) [$(Configuration)|$(Plat)|$(MetaPlatform)] &lt;- %(TargetResult.Identity)"
      Condition="'%(Identity)'!=''"
      Importance="$(ProjVerbosity)" 
    />

    <!--ProjectReference and SelfReference -> Reference-->
    <ItemGroup>
      <ProjectReference Remove="@(ProjectReference)" />
      <IncludeInReference Include="@(EveryResult->WithMetadataValue('IncludeInReference', 'true')->'%(Name)')" >
        <HintPath>%(Identity)</HintPath>
      </IncludeInReference>
      <Reference Include="@(IncludeInReference->'%(Name)')" />
    </ItemGroup>
    <Message 
      Text="  %(ReferenceSource): Reference += %(IncludeInReference.Identity) -> %(HintPath)"
      Condition="'@(IncludeInReference)'!=''"
      Importance="$(ProjVerbosity)" 
    />
  </Target>

  <!--
  
    _DumpFrame
  -->
  <Target
    Name="_DumpFrame"
    BeforeTargets="ResolveMetaProjectReferences"
    Condition="'$(BuildTarget)'=='DryRun' OR '$(Verbosity)'=='high'"
  >

    <PropertyGroup>
      <Tag>BUILD</Tag>
      <Tag Condition="'$(IsLeafPlatform)'!='true'">RECURSE</Tag>
    </PropertyGroup>

    <ItemGroup>
      <_Property Include="BuildTarget" />
      <_Property Include="ProjFile" />
      <_Property Include="IsLeafPlatform" />
      <_Property Include="IsMetaPlatform" />
      <_Property Include="IsLibraryPlatform" />
      <_Property Include="IsPartPlatform" />
      <_Property Include="MobilePlatform" />
      <_Property Include="MobileSubPlatform" />
      <_Property Include="LibraryPlatform" />
      <_Property Include="DefineConstants" />
      <_Property Include="TargetProject" />
      <_Property Include="TargetsFile" />
      <_Property Include="CommonTargetsPath" />
      <_Property Include="CSharpCoreTargetsPath" />
      <_Property Include="BuildingInsideVisualStudio" />
    </ItemGroup>
    <ItemGroup Condition="'$(IsLeafPlatform)'=='true'">
      <_Property Include="OutDirAbsolute" />
      <_Property Include="IntermediateOutputPathAbsolute" />
      <_Property Include="TargetsFile" />
    </ItemGroup>

    <Message 
      Importance="high" 
      Text="$(Tag) [$(Configuration)|$(Plat)|$(MetaPlatform)]: $(AssemblyName) -> { @(ChildPlatforms)$(LeafPlatform) }"
    />
    <Message
      Importance="high"
      Text="  %(_Property.Identity) -> $(%(Identity))"
      Condition="'$(%(Identity))'!=''"
    />
    
    <!--VS load logging-->
    <!--<WriteLineToFile
      File="f:\vs.log"
      Line="$(Tag) [$(Configuration)|$(Plat)|$(MetaPlatform)]: $(AssemblyName) -> { @(ChildPlatforms)$(LeafPlatform) }"
    />-->
    <!--<WriteLineToFile
      File="f:\vs.log"
      Line="  %(_Property.Identity) -> $(%(Identity))"
      Condition="'$(%(Identity))'!=''"
    />-->

    <!--<Message
      Importance="high"
      Text="    NugetReference: %(NugetReference.Identity)"
      Condition="'@(NugetReference)'!=''"
    />-->
    <!--<Message
      Importance="high"
      Text="    Compile: %(Compile.Identity) -> %(FullPath)"
      Condition="'@(Compile)'!=''"
    />-->
    <!--<Message
      Importance="high"
      Text="    None: %(None.Identity) -> %(FullPath)"
      Condition="'@(None)'!=''"
    />-->
    <Message
      Importance="high"
      Text="    ProjectReference: %(ProjectReference.Identity) -> %(FullPath)"
      Condition="'@(ProjectReference)'!=''"
    />
    <Message
      Importance="high"
      Text="    @(ExtractedJarImports): %(ExtractedJarImports.Identity) -> %(FullPath)"
      Condition="'@(ExtractedJarImports)'!=''"
    />
  </Target>
  
</Project>