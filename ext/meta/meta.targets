<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    
    DryRun
  -->
  <PropertyGroup>
    <DryRunDependsOn />
  </PropertyGroup>
  <Target
    Name="DryRun"
    DependsOnTargets="$(DryRunDependsOn)"
    Returns="@(TargetResult)"
  >
    <ItemGroup>
      <TargetResult Include="(path to $(ProjName) result [$(Configuration)|$(Plat)|$(MetaPlatform)])" />
    </ItemGroup>
  </Target>

  <!--
  
    ResolveMetaProjectReferences
      Invokes msbuild on all types of project references before the well known target
  -->
  <Target 
    Name="ResolveMetaProjectReferences"
    BeforeTargets="Proxy"
    Condition="'$(IsLeafPlatform)'=='true'"
  >
    <Error
      Condition="@(Configuration->Count()) > 1"
      Text="Multi-configuration builds not supported for LeafPlatform."
    />
    <Error
      Condition="'@(ChildPlatforms)|$(LeafPlatform)'==''"
      Text="Platform '$(Plat)' is not recognized."
    />
    <Error
      Condition="'$(IsAppPlatform)'=='true' AND '$(IsAppProject)'!='true'"
      Text="Platform '$(Plat)' is an application platform and can only be used to build an application."
    />
    <Error
      Condition="'$(IsLibraryPlatform)'=='true' AND '$(IsLibraryProject)'!='true'"
      Text="Platform '$(Plat)' is a library platform and can only be used to build a library."
    />
    <Error
      Condition="'$(IsUiTestPlatform)'=='true' AND '$(IsUiTestProject)'!='true'"
      Text="Platform '$(Plat)' is a library platform and can only be used to build a library."
    />
    <Error
      Condition="'$(BuildTarget)'=='Compile' AND '$(IsInVS)'!='true'"
      Text="Platform 'Compile' is only supported when building in VS during intellisesne loading."
    />
    
    <!--MetaProjectReference-->
    <ItemGroup>

      <!--ProjectReference -> MetaProjectReference-->
      <MetaProjectReference 
        Condition="'@(ProjectReference)'!=''" 
        Include="@(ProjectReference->'$(ProjDir)%(Identity)')" 
      >
        <ReferenceSource>ProjectReference</ReferenceSource>
        <AdditionalProperties>MetaPlatform=$(LibraryPlatform)</AdditionalProperties>
        <Name>%(Name)</Name>
        <RemoveProperties/>
      </MetaProjectReference>
      <ProjectReference Remove="@(ProjectReference)" />

      <!--SelfReference -> MetaProjectReference-->
      <MetaProjectReference
        Condition="'@(SelfReference)'!=''" 
        Include="$(ProjFile)" 
      >
        <ReferenceSource>SelfReference</ReferenceSource>
        <AdditionalProperties>Platform=%(SelfReference.Identity)</AdditionalProperties>
        <Name>$(AssemblyName)</Name>
        <RemoveProperties>MetaPlatform</RemoveProperties>
      </MetaProjectReference>
      <SelfReference Remove="@(SelfReference)" />
    </ItemGroup>

    <!--MS.Common.targets intellisense logic: 
          if intellisense engine is compiling\initializing then do not compile references 
          and instead change the build target from "compile" to simply "getTargetPath".
          Incidentally, this is also why there is no intellisense for unloaded projects.
    -->
    <PropertyGroup>
      <_Targets>$(BuildTarget)</_Targets>
      <_Targets 
        Condition="'$(BuildTarget)'=='Compile' AND '$(IsInVs)' == 'true'"
      >GetTargetPath</_Targets>
    </PropertyGroup>

    <!--pre log-->
    <Message
      Text="MetaProjectReference: @(MetaProjectReference->Count())"
      Importance="$(ProjVerbosity)" 
    />
    <Message
      Text="  %(MetaProjectReference.ReferenceSource): %(Identity) /t:$(BuildTarget) /+p:%(AdditionalProperties)"
      Condition="'@(MetaProjectReference)'!=''"
      Importance="$(ProjVerbosity)"
    />
    <!--<WriteLineToFile
      File="f:\vs.log"
      Line="MetaProjectReference: @(MetaProjectReference->Count())"
      Condition="'@(MetaProjectReference)'!=''"
    />
    <WriteLineToFile
      File="f:\vs.log"
      Line="  %(MetaProjectReference.ReferenceSource): %(Identity) /t:$(BuildTarget) /+p:%(AdditionalProperties)"
      Condition="'@(MetaProjectReference)'!=''"
    />-->

    <!--build-->
    <MSBuild
      Projects="@(MetaProjectReference)"
      Targets="$(_Targets)"
      ContinueOnError="true"
      BuildInParallel="true"
    >
      <Output ItemName="BuildResult" TaskParameter="TargetOutputs" />
    </MSBuild>

    <!--tag results-->
    <ItemGroup>
      <BuildResult Condition="true">
        <IsPartPlatform Condition="'$(IsPartPlatform)'=='true'">true</IsPartPlatform>
      </BuildResult>
    </ItemGroup>

    <!--select results-->
    <ItemGroup>
      <TargetResult Include="@(BuildResult)"/>
      <TargetResult 
        Condition="'$(IsPartPlatform)'=='' AND '%(TargetResult.IsPartPlatform)'=='true'" 
        Remove="%(Identity)"
      />
    </ItemGroup>
    <Message
      Text="%(ReferenceSource): $(ProjName) [$(Configuration)|$(Plat)|$(MetaPlatform)] &lt;- %(TargetResult.Identity)"
      Condition="@(TargetResult->Count()) > 0"
      Importance="$(ProjVerbosity)" 
    />

    <!--MetaProjectReference -> Reference-->
    <ItemGroup>
      <Reference Include="@(BuildResult->'%(Name)')" >
        <HintPath>%(Identity)</HintPath>
      </Reference>
    </ItemGroup>
    <Message 
      Text="  %(ReferenceSource): Reference += %(Identity)"
      Condition="@(BuildResult->Count()) > 0"
      Importance="$(ProjVerbosity)" 
    />
  </Target>

  <!--
  
    _DumpFrame
  -->
  <Target
    Name="_DumpFrame"
    BeforeTargets="ResolveMetaProjectReferences"
    Condition="'$(BuildTarget)'=='DryRun' OR '$(Verbosity)'=='high'"
  >

    <PropertyGroup>
      <Tag>BUILD</Tag>
      <Tag Condition="'$(IsLeafPlatform)'!='true'">RECURSE</Tag>
    </PropertyGroup>

    <ItemGroup>
      <_Property Include="BuildTarget" />
      <_Property Include="ProjFile" />
      <_Property Include="IsLeafPlatform" />
      <_Property Include="IsMetaPlatform" />
      <_Property Include="IsLibraryPlatform" />
      <_Property Include="IsPartPlatform" />
      <_Property Include="MobilePlatform" />
      <_Property Include="MobileSubPlatform" />
      <_Property Include="LibraryPlatform" />
      <_Property Include="DefineConstants" />
      <_Property Include="TargetProject" />
      <_Property Include="TargetsFile" />
      <_Property Include="CommonTargetsPath" />
      <_Property Include="CSharpCoreTargetsPath" />
      <_Property Include="BuildingInsideVisualStudio" />
    </ItemGroup>
    <ItemGroup Condition="'$(IsLeafPlatform)'=='true'">
      <_Property Include="OutDirAbsolute" />
      <_Property Include="IntermediateOutputPathAbsolute" />
      <_Property Include="TargetsFile" />
    </ItemGroup>

    <Message 
      Importance="high" 
      Text="$(Tag) [$(Configuration)|$(Plat)|$(MetaPlatform)]: $(AssemblyName) -> { @(ChildPlatforms)$(LeafPlatform) }"
    />
    <Message
      Importance="high"
      Text="  %(_Property.Identity) -> $(%(Identity))"
      Condition="'$(%(Identity))'!=''"
    />
    
    <!--VS load logging-->
    <!--<WriteLineToFile
      File="f:\vs.log"
      Line="$(Tag) [$(Configuration)|$(Plat)|$(MetaPlatform)]: $(AssemblyName) -> { @(ChildPlatforms)$(LeafPlatform) }"
    />-->
    <!--<WriteLineToFile
      File="f:\vs.log"
      Line="  %(_Property.Identity) -> $(%(Identity))"
      Condition="'$(%(Identity))'!=''"
    />-->

    <!--<Message
      Importance="high"
      Text="    NugetReference: %(NugetReference.Identity)"
      Condition="'@(NugetReference)'!=''"
    />-->
    <!--<Message
      Importance="high"
      Text="    Compile: %(Compile.Identity) -> %(FullPath)"
      Condition="'@(Compile)'!=''"
    />-->
    <!--<Message
      Importance="high"
      Text="    None: %(None.Identity) -> %(FullPath)"
      Condition="'@(None)'!=''"
    />-->
    <Message
      Importance="high"
      Text="    ProjectReference: %(ProjectReference.Identity) -> %(FullPath)"
      Condition="'@(ProjectReference)'!=''"
    />
    <Message
      Importance="high"
      Text="    @(ExtractedJarImports): %(ExtractedJarImports.Identity) -> %(FullPath)"
      Condition="'@(ExtractedJarImports)'!=''"
    />
  </Target>
  
</Project>